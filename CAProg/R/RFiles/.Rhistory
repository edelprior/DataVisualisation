group_by(Species) %>%
layer_model_predictions(model = input_radiobuttons(choices = c("Linear" = "lm","LOESS" = "loess"),selected = "lm",label = "Model type""))
iris %>%
ggvis(~Sepal.Length, ~Sepal.Width) %>%
layer_points(fill = ~Species,size:=input_slider(0,400,label = "Size"),opacity := input_slider(0,1,label = "Opacity")) %>%
group_by(Species) %>%
layer_model_predictions(model = input_radiobuttons(choices = c("Linear" = "lm","LOESS" = "loess"),selected = "lm",label = "Model type"))
iris %>%
ggvis(~Sepal.Length, ~Sepal.Width) %>%
layer_points(fill = ~Species,size:=input_slider(0,400,label = "Size"),opacity := input_slider(0,1,label = "Opacity")) %>%
layer_model_predictions(model = input_radiobuttons(choices = c("Linear" = "lm","LOESS" = "loess"),selected = "lm",label = "Model type"))
View(Canchild)
library(readr)
Cancer <- read_csv("/Volumes/ASHERIDAN/Cancer.csv")
View(Cancer)
library(readr)
Cancer <- read_csv("/Volumes/ASHERIDAN/Cancer.csv")
View(Cancer)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
ggplot(Cancer,aes("",Months))+geom_violin(fill = "red") + facet_wrap(~Type,ncol = 4,scales = "free") + theme(axis.text.x=element_text(angle = -90,size =5))+theme(strip.background = element_rect(fill = "grey20",colour = "grey80",size =1),strip.text = element_text(colour = "white"))
library("shiny", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
runApp('app.R')
runApp('app.R')
runApp('app.R')
# LOAD SHINY ###############################################
library(shiny)
# DEFINE SERVER FUNCTION ###################################
server <- function(input, output) {
# Define histogram output
output$irisHist <- renderPlot({  # "irisHist" in UI also
ic   <- as.numeric(input$var)  # ic = "iris column"
x    <- iris[, ic]
bins <- seq(min(x),
max(x),
length.out = input$bins + 1)
hist(x,
breaks = bins,
col    = '#8DC13D',  # Green
border = 'white',
xlab   = "Centimeters",
main   = paste("Histogram of", names(iris[ic]))
)
})
}
# DEFINE UI FUNCTION #######################################
ui <- fluidPage(
titlePanel("Charting Iris Data"),
sidebarLayout(
sidebarPanel(
# Dropdown menu for selecting variable from iris data.
selectInput("var",
label = "Select variable",
choices = c("Sepal.Length" = 1,
"Sepal.Width"  = 2,
"Petal.Length" = 3,
"Petal.Width"  = 4),
selected = 1),  # Default selection
# Slider to set bin width in histogram
sliderInput("bins",
"Number of bins",
min   = 1,
max   = 30,
value = 15)
),
mainPanel(
plotOutput("irisHist")  # "irisHist" in server also
)
)
)
# CALL THE SHINY APP #######################################
shinyApp(ui = ui, server = server)
runApp('app.R')
# DST_01_12_Shiny
# app.R
# LOAD SHINY ###############################################
library(shiny)
# DEFINE SERVER FUNCTION ###################################
server <- function(input, output) {
# Define histogram output
output$irisHist <- renderPlot({  # "irisHist" in UI also
ic   <- as.numeric(input$var)  # ic = "iris column"
x    <- iris[, ic]
bins <- seq(min(x),
max(x),
length.out = input$bins + 1)
hist(x,
breaks = bins,
col    = '#8DC13D',  # Green
border = 'white',
xlab   = "Centimeters",
main   = paste("Histogram of", names(iris[ic]))
)
})
}
# DEFINE UI FUNCTION #######################################
ui <- fluidPage(
titlePanel("Charting Iris Data"),
sidebarLayout(
sidebarPanel(
# Dropdown menu for selecting variable from iris data.
selectInput("var",
label = "Select variable",
choices = c("Sepal.Length" = 1,
"Sepal.Width"  = 2,
"Petal.Length" = 3,
"Petal.Width"  = 4),
selected = 1),  # Default selection
# Slider to set bin width in histogram
sliderInput("bins",
"Number of bins",
min   = 1,
max   = 30,
value = 15)
),
mainPanel(
plotOutput("irisHist")  # "irisHist" in server also
)
)
)
# CALL THE SHINY APP #######################################
shinyApp(ui = ui, server = server)
runApp('app.R')
runApp('app.R')
runApp('app.R')
runApp('app.R')
runApp('app.R')
library("shiny", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
runApp('app.R')
runApp('app.R')
DST_01_12_Shiny
# app.R
# LOAD SHINY ###############################################
library(shiny)
# DEFINE SERVER FUNCTION ###################################
server <- function(input, output) {
# Define histogram output
output$irisHist <- renderPlot({  # "irisHist" in UI also
ic   <- as.numeric(input$var)  # ic = "iris column"
x    <- iris[, ic]
bins <- seq(min(x),
max(x),
length.out = input$bins + 1)
hist(x,
breaks = bins,
col    = '#8DC13D',  # Green
border = 'white',
xlab   = "Centimeters",
main   = paste("Histogram of", names(iris[ic]))
)
})
}
# DEFINE UI FUNCTION #######################################
ui <- fluidPage(
titlePanel("Charting Iris Data"),
sidebarLayout(
sidebarPanel(
# Dropdown menu for selecting variable from iris data.
selectInput("var",
label = "Select variable",
choices = c("Sepal.Length" = 1,
"Sepal.Width"  = 2,
"Petal.Length" = 3,
"Petal.Width"  = 4),
selected = 1),  # Default selection
# Slider to set bin width in histogram
sliderInput("bins",
"Number of bins",
min   = 1,
max   = 30,
value = 15)
),
mainPanel(
plotOutput("irisHist")  # "irisHist" in server also
)
)
)
# CALL THE SHINY APP #######################################
shinyApp(ui = ui, server = server)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("shiny", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
runApp('cyril')
install.packages("rsconnect")
install.packages("rsconnect")
library("rsconnect", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("shiny", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
ggplot(Appreg,aes(Category,Number)) + geom_bar(stat ="identity",fill = "Blue") + coord_flip()
ggplot(Appreg, aes(x = reorder(Category,Number), y = Number))+geom_bar(stat="identity", fill ="red") + coord_flip()
my_vector=c(0.091, 0.250, 0.072, 0.075, 0.081, 0.089, 0.173, 0.191, 0.021)
names(my_vector)=c("Acohol Addiction","Apathy", "Impulsivity", "Eating Disorders", "OCD", "Schizotypy", "Trait Anxiety", "Depression", "Social Anxiety")
barplot(my_vector, abline(h=c(0)), col=c("goldenrod1", "mediumseagreen", "indianred2", "cadetblue2", "chocolate1", "cornflowerblue", "lightgoldenrod1", "mediumorchid", "firebrick1"), xlab="Diagnostic Scales", ylab="ERN amplitude (change in decimal)")
barplot(my_vector, abline(h=c(0)), col=c("goldenrod1", "mediumseagreen", "indianred2", "cadetblue2", "chocolate1", "cornflowerblue", "lightgoldenrod1", "mediumorchid", "firebrick1"), xlab="Diagnostic Scales", ylab="ERN amplitude (change in decimal)")
barplot(my_vector, abline(h=c(0)), col=c("goldenrod1", "mediumseagreen", "indianred2", "cadetblue2", "chocolate1", "cornflowerblue", "lightgoldenrod1", "mediumorchid", "firebrick1"), xlab="Diagnostic Scales", ylab="ERN amplitude (change in decimal)")
barplot(my_vector)
barplot(my_vector,ylim = rev(c(0, 1))
barplot(my_vector,ylim = rev(c(0, 1)))
barplot(my_vector,ylim = rev(c(0, 1)))
barplot(my_vector,ylim = rev(c(0, 1)),axes =F)
barplot(my_vector,ylim = rev(c(0, 1))),xlim(axes=F)
barplot(my_vector,ylim = rev(c(0, 1))),xlim(axes=T)
barplot(my_vector,ylim = rev(c(0, 1)))
barplot(my_vector,ylim = rev(c(0, 1)))
xis(1, pos=0)
barplot(my_vector,ylim = rev(c(0, 1)))
xis(1, pos=0)
barplot(my_vector,ylim = rev(c(0, 1)),abline(h=c(0)))
barplot(my_vector,ylim = rev(c(0, 1))
barplot(my_vector,ylim = rev(c(0, 1)))
barplot(my_vector,ylim = rev(c(0, 1)),xlim=c(0,10),axes=F))
barplot(my_vector,ylim = rev(c(0, 1)),xlim=c(0,10),axes=F)
barplot(my_vector,ylim = rev(c(0, 1)))
ggplot(my_vector, aes("",my_vector) + geom_bar()
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
ggplot(my_vector, aes("",my_vector) + geom_bar()
barplot(my_vector,abline(h=c(0)),ylim = rev(c(0, 1)))
barplot(my_vector,abline(h=c(0)),ylim = rev(c(0, 1)))
barplot(my_vector,abline(h=c(1)),ylim = rev(c(0, 1)))
barplot(my_vector,abline(h=c(-1)),ylim = rev(c(0, 1)))
barplot(my_vector,abline(h=c(.5)),ylim = rev(c(0, 1)))
barplot(my_vector,abline(h=c(0)),ylim = rev(c(0, 1)))
axis(1, pos=0)
barplot(my_vector,abline(h=c(0)),ylim = rev(c(0, 1)))
barplot(my_vector,abline(h=c(0)),ylim = rev(c(0, 1)))
axis(1, pos=0)
axis(2, pos=0)
axis(2, pos=1)
barplot(my_vector,abline(h=c(0)),ylim = rev(c(0, 1)))
barplot(my_vector,abline(h=c(0)),ylim = rev(c(0, 1)))
barplot(my_vector,abline(h=c(0)),ylim = rev(c(0, 1)))
axis(1, pos=0)
barplot(my_vector,ylim = rev(c(0, 1)))
barplot(my_vector,ylim = rev(c(0, 1)),abline(h=c(0)))
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
ggplot(Caoimhe, aes(Diagnosis,Coefficient)) + geom_bar(stat ="identity",fill = c("goldenrod1", "mediumseagreen", "indianred2", "cadetblue2", "chocolate1", "cornflowerblue", "lightgoldenrod1", "mediumorchid", "firebrick1"))+
scale_y_reverse()+ scale_x_discrete(position = "top")+geom_errorbar(aes(ymin=Coefficient-se, ymax=Coefficient+se), width=.2)+
xlab("Diagnostic Scales") + ylab("ERN amplitude (change in decimal)")+theme(axis.text.x=element_text(angle = 0,size =8))+theme_classic()
library(readr)
Caoimhe <- read_csv("/Volumes/ASHERIDAN/Caoimhe/Caoimhe.csv")
View(Caoimhe)
ggplot(Caoimhe, aes(Diagnosis,Coefficient)) + geom_bar(stat ="identity",fill = c("goldenrod1", "mediumseagreen", "indianred2", "cadetblue2", "chocolate1", "cornflowerblue", "lightgoldenrod1", "mediumorchid", "firebrick1"))+
scale_y_reverse()+ scale_x_discrete(position = "top")+geom_errorbar(aes(ymin=Coefficient-se, ymax=Coefficient+se), width=.2)+
xlab("Diagnostic Scales") + ylab("ERN amplitude (change in decimal)")+theme(axis.text.x=element_text(angle = 0,size =8))+theme_classic()
ggplot(Caoimhe, aes(Diagnosis,Coefficient)) + geom_bar(stat ="identity",fill = c("goldenrod1", "mediumseagreen", "indianred2", "cadetblue2", "chocolate1", "cornflowerblue", "lightgoldenrod1", "mediumorchid", "firebrick1"))+
scale_y_reverse()+ scale_x_discrete(position = "top")+geom_errorbar(aes(ymin=Coefficient-se, ymax=Coefficient+se), width=.2)+
xlab("Diagnostic Scales") + ylab("ERN amplitude (change in decimal)")+theme(axis.text.x=element_text(angle = 0,size =8))+theme_classic()
ggplot(Caoimhe, aes(Diagnosis,Coefficient)) + geom_bar(stat ="identity",fill = c("goldenrod1", "mediumseagreen", "indianred2", "cadetblue2", "chocolate1", "cornflowerblue", "lightgoldenrod1", "mediumorchid", "firebrick1"))+
scale_y_reverse()+ scale_x_discrete(position = "top")+geom_errorbar(aes(ymin=Coefficient-se, ymax=Coefficient+se), width=.2)+
xlab("Diagnostic Scales") + ylab("ERN amplitude (change in decimal)")+theme(axis.text.x=element_text(angle = 0,size =8))
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("shiny", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
ggplot(Blood,aes(Longitude,Latitude, col = Countyname))+ geom_point()
ggplot(Cancer,aes("",Months))+geom_violin(fill = "red") + facet_wrap(~Type,ncol = 4,scales = "free") + theme(axis.text.x=element_text(angle = -90,size =5))+theme(strip.background = element_rect(fill = "grey20",colour = "grey80",size =1),strip.text = element_text(colour = "white"))
ggplot(Caoimhe, aes(Diagnosis,Coefficient)) + geom_bar(stat ="identity",fill = c("goldenrod1", "mediumseagreen", "indianred2", "cadetblue2", "chocolate1", "cornflowerblue", "lightgoldenrod1", "mediumorchid", "firebrick1"))+
scale_y_reverse()+ scale_x_discrete(position = "top")+geom_errorbar(aes(ymin=Coefficient-se, ymax=Coefficient+se), width=.2)+
xlab("Diagnostic Scales") + ylab("ERN amplitude (change in decimal)")+theme(axis.text.x=element_text(angle = 0,size =8))
View(server)
View(server)
rm(my_vector)
rm(ui)
rm(server)
View(Caoimhe)
rm("Caoimhe")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
ggplot(Apprentice2, aes("",Number))+geom_boxplot(fill = "red")+ facet_wrap(~Apprentice,ncol = 6,scales = "free") + theme(axis.text.x=element_text(angle = -90,size =5))+theme(strip.background = element_rect(fill = "grey20",colour = "grey80",size =1),strip.text = element_text(colour = "white"))
ggplot(Appreg,aes(Category,Number)) + geom_bar(stat ="identity",fill = "Blue") + coord_flip()
View(Cancer)
ggplot(Cancer,aes("",Months))+geom_violin(fill = "red") + facet_wrap(~Type,ncol = 3,scales = "free") + theme(axis.text.x=element_text(angle = -90,size =5))+theme(strip.background = element_rect(fill = "grey20",colour = "grey80",size =1),strip.text = element_text(colour = "white"))
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
ggplot(Cancer,aes("",Months))+geom_violin(fill = "red") + facet_wrap(~Type,ncol = 3,scales = "free") + theme(axis.text.x=element_text(angle = -90,size =5))+theme(strip.background = element_rect(fill = "grey20",colour = "grey80",size =1),strip.text = element_text(colour = "white"))
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
View(Dacc1)
library("vcd", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
mosaic(xtabs(Exposure ~ Gender + Age,data = Policy1), direction = c("v", "h"),gp = gpar(fill = c("red")))
View(Policy1)
mosaic(xtabs(Exposure ~ Gender,data = Policy1), direction = c("v", "h"),gp = gpar(fill = c("red")))
mosaic(xtabs(Exposure ~ Gender,data = Policy1), direction = c("v", "h"),gp = gpar(fill = c("red")))+ coord_flip()
mosaic(xtabs(Exposure ~ Gender,data = Policy1), direction = c("v", "h"),gp = gpar(fill = c("red")))+ coord_flip()
mosaic(xtabs(Exposure ~ Gender,data = Policy1), direction = c("v", "h"),gp = gpar(fill = c("red"))) + coord_flip()
mosaic(xtabs(Exposure ~ Age,data = Policy1), direction = c("v", "h"),gp = gpar(fill = c("red")))
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
ggplot(Appreg,aes(Category,Number)) + geom_bar(stat ="identity",fill = "Blue") + coord_flip()
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
ggplot(Cancer,aes("",Months))+geom_violin(fill = "red") + facet_wrap(~Type,ncol = 3,scales = "free") + theme(axis.text.x=element_text(angle = -90,size =5))+theme(strip.background = element_rect(fill = "grey20",colour = "grey80",size =1),strip.text = element_text(colour = "white"))
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
ggplot(Cancer,aes("",Months))+geom_violin(fill = "red") + facet_wrap(~Type,ncol = 3,scales = "free") + theme(axis.text.x=element_text(angle = -90,size =5))+theme(strip.background = element_rect(fill = "grey20",colour = "grey80",size =1),strip.text = element_text(colour = "white"))
install.packages("plotly")
library("plotly", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
cyril<- ggplot(Cancer,aes("",Months))+geom_violin(fill = "red") + facet_wrap(~Type,ncol = 3,scales = "free") + theme(axis.text.x=element_text(angle = -90,size =5))+theme(strip.background = element_rect(fill = "grey20",colour = "grey80",size =1),strip.text = element_text(colour = "white"))
cyril
plot_ly(cyril)
plotly(cyril)
plot_ly(data = cyril)
plot_ly(cyril)
plot_ly(ggplot cyril)
ggplotly(cyril)
ggplot(Cancer,aes("",Months))+geom_boxplot(fill = "red") + facet_wrap(~Type,ncol = 3,scales = "free") + theme(axis.text.x=element_text(angle = -90,size =5))+theme(strip.background = element_rect(fill = "grey20",colour = "grey80",size =1),strip.text = element_text(colour = "white"))
ggplot(Cancer,aes("",Months))+geom_jitter(fill = "red") + facet_wrap(~Type,ncol = 3,scales = "free") + theme(axis.text.x=element_text(angle = -90,size =5))+theme(strip.background = element_rect(fill = "grey20",colour = "grey80",size =1),strip.text = element_text(colour = "white"))
ggplotly(cyril)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("plotly", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
ggplot(FrontAge, aes("",Front,size = 3,colour = "red"))+geom_jitter() + xlab("")+ylab("Age")+ggtitle("Age of front seat passengers")
ggplot(Dacc1,aes(Weekday,Number)) + geom_bar(stat ="identity",fill = "Blue")+ facet_wrap(~Type,ncol=2,scales = "free")+ scale_x_discrete(limits= c("Mon","Tues","Wed","Th","Fri","Sat","Sun"))
accident <-ggplot(Dacc1,aes(Weekday,Number)) + geom_bar(stat ="identity",fill = "Blue")+ facet_wrap(~Type,ncol=2,scales = "free")+ scale_x_discrete(limits= c(“Mon","Tues","Wed","Th","Fri","Sat","Sun"))
accident <- ggplot(Dacc1,aes(Weekday,Number)) + geom_bar(stat ="identity",fill = "Blue")+ facet_wrap(~Type,ncol=2,scales = "free")+ scale_x_discrete(limits= c(“Mon","Tues","Wed","Th","Fri","Sat","Sun"))
accident <- ggplot(Dacc1,aes(Weekday,Number)) + geom_bar(stat ="identity",fill = "Blue")+ facet_wrap(~Type,ncol=2,scales = "free")+ scale_x_discrete(limits= c(“Mon","Tues","Wed","Th","Fri","Sat","Sun")
accident <- ggplot(Dacc1,aes(Weekday,Number)) + geom_bar(stat ="identity",fill = "Blue")+ facet_wrap(~Type,ncol=2,scales = "free")+ scale_x_discrete(limits= c(“Mon","Tues","Wed","Th","Fri","Sat","Sun"))
accident <- ggplot(Dacc1,aes(Weekday,Number)) + geom_bar(stat ="identity",fill = "Blue")+ facet_wrap(~Type,ncol=2,scales = "free")+ scale_x_discrete(limits= c("Mon","Tues","Wed","Th","Fri","Sat","Sun"))
ggplotly(accident)
ggplot(Appreg,aes(Category,Number)) + geom_bar(stat ="identity",fill = "Blue") + coord_flip()
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
ggplot(Appreg,aes(Category,Number)) + geom_bar(stat ="identity",fill = "Blue") + coord_flip()
ggplot(Appreg,aes(Category,Number)) + geom_bar(stat ="identity",fill = "Blue") + coord_flip()
ggplot(Appreg,aes(Category,Number)) + geom_bar(stat ="identity",fill = "Blue") + theme(axis.text.x=element_text(angle = -90,size = 10))
ggplot(Appreg, aes(x = reorder(Category,Number), y = Number))+geom_bar(stat="identity", fill ="red") + coord_flip()
ggplot(grantsolaslong,aes(grant,Amount))+geom_bar(stat="identity",fill = "red") + facet_wrap(~ETB,ncol = 4,scales = "fixed") + theme(axis.text.x=element_text(angle = -90,size =5))+theme(strip.background = element_rect(fill = "grey20",colour = "grey80",size =1),strip.text = element_text(colour = "white"))
rmove(accident)
remove(accident)
remove(cyril)
library("plotly", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(readr)
TouristR <- read_csv("~/Desktop/Bernie's/TouristR.csv",
col_types = cols(Number = col_number()))
View(TouristR)
install.packages("ggplot")
install.packages("ggplot2")
ggplot(Appreg,aes(Category,Number)) + geom_bar(stat ="identity",fill = "Blue") + coord_flip()
install.packages("ggplot2")
ggplot(Appreg,aes(Category,Number)) + geom_bar(stat ="identity",fill = "Blue") + coord_flip()
library("ggplot")
library("ggplot2")
CapelStreet$Date <- as.Date(CapelStreet$Date,format = "%d/%m/%y")
ggplot(CapelStreet,aes(Date,PedestrianFlow)) + geom_line(size =1,colour = "blue") +xlab("Year")+ylab("Number")
load("/Volumes/LaCie/2018:19/iadt 2018:19/Ulster Bank Cert /UB (A) /Part A/RFiles (SPA 2018 for Students)/.RData")
load("/Volumes/LaCie/2018:19/iadt 2018:19/Ulster Bank Cert /UB (A) /Part A/RFiles (SPA 2018 for Students)/.RData")
load("/Volumes/LaCie/2018:19/iadt 2018:19/Ulster Bank Cert /UB (A) /Part A/RFiles (SPA 2018 for Students)/.RData")
load("/Volumes/LaCie/2018:19/iadt 2018:19/Ulster Bank Cert /UB (A) /Part A/RFiles (SPA 2018 for Cyril)/.RData")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
ggplot(Appreg,aes(Category,Number)) + geom_bar(stat ="identity",fill = "Blue") + coord_flip()
ggplot(Appreg,aes(Category,Number)) + geom_bar(stat ="identity",fill = "Blue") + coord_flip()
ggplot(Appreg,aes(Category,Number)) + geom_bar(stat ="identity",fill = "Blue") + theme(axis.text.x=element_text(angle = -90,size = 10))
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
ggplot(Appreg,aes(Category,Number)) + geom_bar(stat ="identity",fill = "Blue") + coord_flip()
library(readr)
InsuranceMosaic <- read_csv("/Volumes/LaCie/InsuranceMosaic.csv")
View(InsuranceMosaic)
library("vcd", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
View(InsuranceMosaic)
View(InsuranceMosaic)
View(InsuranceMosaic)
View(InsuranceMosaic)
mosaic(xtabs(Count ~ Exposure + Licence+Gender+Age, data = InsuranceMosaic), direction =c("v","h"),gp = gpar(fill = c("red","grey")))
View(Study)
mosaic(xtabs(Exposure ~ Licence + Gender + Age, data = InsuranceMosaic), direction =c("v","h"),gp = gpar(fill = c("red","grey")))
View(InsuranceMosaic)
mosaic(xtabs(Exposure ~ License + Gender + Age, data = InsuranceMosaic), direction =c("v","h"),gp = gpar(fill = c("red","grey")))
mosaic(xtabs(Exposure ~ Age+License + Gender , data = InsuranceMosaic), direction =c("v","h"),gp = gpar(fill = c("red","grey")))
mosaic(xtabs(Exposure ~ Age+Gender+License, data = InsuranceMosaic), direction =c("v","h"),gp = gpar(fill = c("red","grey")))
View(InsuranceMosaic)
View(InsuranceMosaic)
View(InsuranceMosaic)
View(InsuranceMosaic)
View(InsuranceMosaic)
View(InsuranceMosaic)
View(InsuranceMosaic)
View(InsuranceMosaic)
View(InsuranceMosaic)
rm(InsuranceMosaic)
library(readr)
InsuranceMosaic <- read_csv("/Volumes/LaCie/InsuranceMosaic.csv")
View(InsuranceMosaic)
mosaic(xtabs(Exposure ~ Age+Gender+License, data = InsuranceMosaic), direction =c("v","h"),gp = gpar(fill = c("red","grey")))
View(InsuranceMosaic)
mosaic(xtabs(Exposure ~ Age+Gender+License, data = InsuranceMosaic), direction =c("v","v","h"),gp = gpar(fill = c("red","grey")))
mosaic(xtabs(Exposure ~ Age+License+Gender, data = InsuranceMosaic), direction =c("v","v","h"),gp = gpar(fill = c("red","grey")))
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages("vcd")
library("vcd", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
ggplot(Appreg,aes(Category,Number)) + geom_bar(stat ="identity",fill = "Blue") + coord_flip()
ggplot(Appreg,aes(Category,Number)) + geom_bar(stat ="identity",fill = "Blue") + theme(axis.text.x=element_text(angle = -90,size = 10))
CapelStreet$Date <- as.Date(CapelStreet$Date,format = "%d/%m/%y")
ggplot(CapelStreet,aes(Date,PedestrianFlow)) + geom_line(size =1,colour = "blue") +xlab("Year")+ylab("Number")
ggplot(FrontAge, aes(Front))+geom_histogram(bins = 5, show.legend=NA,fill = "red") + xlab("Age")+ylab("number")+ggtitle("Age of front seat passengers")
ggplot(FrontAge, aes("",Front))+geom_boxplot(fill = "red") + xlab("")+ylab("number")+ggtitle("Age of front seat passengers")
ggplot(FrontAge, aes("",Front,fill = "blue"))+geom_violin() + xlab("")+ylab("Age")+ggtitle("Age of front seat passengers")
ggplot(FrontAge, aes("",Front))+geom_point() + xlab("")+ylab("number")+ggtitle("Age of front seat passengers")
ggplot(DrPaAge, aes(DrAge,PasAge))+geom_point(size =1, colour = "black") + xlab("Driver Age")+ylab("Passenger Age")
ggplot(Quote,aes("",Quote)) + geom_boxplot(fill = "red")+ facet_wrap( ~Age, scales= "fixed")
ggplot(Dacc1,aes(Weekday,Number)) + geom_bar(stat ="identity",fill = "Blue")+ facet_wrap(~Type,ncol=2,scales = "free")+ scale_x_discrete(limits= c("Mon","Tues","Wed","Th","Fri","Sat","Sun"))
ggplot(Dacc1,aes(Weekday,Number)) + geom_bar(stat ="identity",fill = "Blue")+ facet_wrap(~Type,ncol=2,scales = "free")+ scale_x_discrete(limits= c("Mon","Tues","Wed","Th","Fri","Sat","Sun"))
ggplot(FrontAge, aes("",Front,size = 3,colour = "red"))+geom_jitter() + xlab("")+ylab("Age")+ggtitle("Age of front seat passengers")
ggplot(DrPaAge, aes(DrAge,PasAge))+geom_point(size =1, colour = "black") + xlab("Driver Age")+ylab("Passenger Age")
ggplot(Quote,aes("",Quote)) + geom_boxplot(fill = "red")+ facet_wrap( ~Age, scales= "fixed")
mosaic(xtabs(Exposure ~ Gender + Age,data = Policy1), direction = c("v", "h"),gp = gpar(fill = c("red")))
mosaic(xtabs(Exposure ~ Gender + Age,data = Policy1), direction = c("v", "h"),gp = gpar(fill = c("red")))
mosaic(xtabs(Exposure ~ Gender + Age,data = Policy1), direction = c("v", "h"),gp = gpar(fill = c("red")))
ggplot(Dacc1,aes(Weekday,Number)) + geom_bar(stat ="identity",fill = "Blue")+ facet_wrap(~Type,ncol=2,scales = "free")+ scale_x_discrete(limits= c("Mon","Tues","Wed","Th","Fri","Sat","Sun"))
ggplot(BurglaryRate,aes(Longitude,Latitude,size = Rate)) + geom_point()+  xlab("Longitude") +  ylab("Latitude") + ggtitle("Crime Rate by Garda Station per 100,000 Population")
ggplot(StLoc,aes(Latitude,Longitude)) + geom_point(size = 2)+  xlab("") + ggtitle("Distribution of Students by Program") +  facet_wrap(~Program,ncol = 4)
ggplot(grantsolaslong,aes(grant,Amount))+geom_bar(stat="identity",fill = "red") + facet_wrap(~ETB,ncol = 4,scales = "fixed") + theme(axis.text.x=element_text(angle = -90,size =5))+theme(strip.background = element_rect(fill = "grey20",colour = "grey80",size =1),strip.text = element_text(colour = "white"))
ggplot(grantsolaslong,aes(grant,Amount))+geom_bar(stat="identity",fill = "red") + facet_wrap(~ETB,ncol = 4,scales = "fixed") + theme(axis.text.x=element_text(angle = -90,size =5))+theme(strip.background = element_rect(fill = "grey20",colour = "grey80",size =1),strip.text = element_text(colour = "white"))
ggplot(grantsolaslong,aes(ETB,Amount))+geom_bar(stat="identity",fill = "red") + facet_wrap(~grant,ncol = 3,scales = "free") + theme(axis.text.x=element_text(angle = -90,size =5))+theme(strip.background = element_rect(fill = "grey20",colour = "grey80",size =1),strip.text = element_text(colour = "white"))
mosaic(xtabs(Number ~ Region + Gender+Diagnosed,data = Canchild), direction =c("v","v","h"),gp = gpar(fill = c("red","grey")))
mosaic(xtabs(Exposure ~ Age+License+Gender, data = InsuranceMosaic), direction =c("v","v","h"),gp = gpar(fill = c("red","grey")))
mosaic(xtabs(Count ~ ED + Field,data = Study), direction =c("v","h"),gp = gpar(fill = c("red","grey")))
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("vcd", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
ggplot(Appreg,aes(Category,Number)) + geom_bar(stat ="identity",fill = "Blue") + coord_flip()
ggplot(Appreg,aes(Category,Number)) + geom_bar(stat ="identity",fill = "Blue") + theme(axis.text.x=element_text(angle = -90,size = 10))
ggplot(Appreg, aes(x = reorder(Category,Number), y = Number))+geom_bar(stat="identity", fill ="red") + coord_flip()
CapelStreet$Date <- as.Date(CapelStreet$Date,format = "%d/%m/%y")
ggplot(CapelStreet,aes(Date,PedestrianFlow)) + geom_line(size =1,colour = "blue") +xlab("Year")+ylab("Number")
ggplot(FrontAge, aes(Front))+geom_histogram(bins = 5, show.legend=NA,fill = "red") + xlab("Age")+ylab("number")+ggtitle("Age of front seat passengers")
ggplot(FrontAge, aes("",Front))+geom_boxplot(fill = "red") + xlab("")+ylab("number")+ggtitle("Age of front seat passengers")
ggplot(FrontAge, aes("",Front,size = 3,colour = "red"))+geom_jitter() + xlab("")+ylab("Age")+ggtitle("Age of front seat passengers")
ggplot(DrPaAge, aes(DrAge,PasAge))+geom_point(size =1, colour = "black") + xlab("Driver Age")+ylab("Passenger Age")
ggplot(Quote,aes("",Quote)) + geom_boxplot(fill = "red")+ facet_wrap( ~Age, scales= "fixed")
ggplot(Dacc1,aes(Weekday,Number)) + geom_bar(stat ="identity",fill = "Blue")+ facet_wrap(~Type,ncol=2,scales = "free")+ scale_x_discrete(limits= c("Mon","Tues","Wed","Th","Fri","Sat","Sun"))
ggplot(BurglaryRate,aes(Longitude,Latitude,size = Rate)) + geom_point()+  xlab("Longitude") +  ylab("Latitude") + ggtitle("Crime Rate by Garda Station per 100,000 Population")
ggplot(grantsolaslong,aes(grant,Amount))+geom_bar(stat="identity",fill = "red") + facet_wrap(~ETB,ncol = 4,scales = "fixed") + theme(axis.text.x=element_text(angle = -90,size =5))+theme(strip.background = element_rect(fill = "grey20",colour = "grey80",size =1),strip.text = element_text(colour = "white"))
mosaic(xtabs(Exposure ~ Age+License+Gender, data = InsuranceMosaic), direction =c("v","v","h"),gp = gpar(fill = c("red","grey")))
View(InsuranceMosaic)
install.packages("ggplot2")
install.packages("vcd")
library("vcd", lib.loc="\\\\sideshowbob1/studenthome/N00153748/My Documents/R/win-library/3.5")
library("ggplot2", lib.loc="\\\\sideshowbob1/studenthome/N00153748/My Documents/R/win-library/3.5")
View(Apprentice2)
View(Apprentice2)
View(Apprentice2)
ggplot(Appreg,aes(Category,Number)) + geom_bar(stat ="identity",fill = "Blue") + coord_flip()
ggplot(DrPaAge, aes(DrAge,PasAge))+geom_point(size =1, colour = "black") + xlab("Driver Age")+ylab("Passenger Age")
ggplot(BurglaryRate,aes(Longitude,Latitude,size = Rate)) + geom_point()+  xlab("Longitude") +  ylab("Latitude") + ggtitle("Crime Rate by Garda Station per 100,000 Population")
View(Study)
mosaic(xtabs(Number ~ Region + Gender+Diagnosed,data = Canchild), direction =c("v","v","h"),gp = gpar(fill = c("red","grey")))
mosaic(xtabs(Number ~ Region + Gender+Diagnosed,data = Canchild), direction =c("v","v","h"),gp = gpar(fill = c("red","blue")))
mosaic(xtabs(Number ~ Region + Gender+Diagnosed,data = Canchild), direction =c("v","v","h"),gp = gpar(fill = c("red","pink")))
mosaic(xtabs(Number ~ Region + Gender+Diagnosed,data = Canchild), direction =c("v","h","h"),gp = gpar(fill = c("red","pink")))
mosaic(xtabs(Number ~ Region + Gender+Diagnosed,data = Canchild), direction =c("v","v","h"),gp = gpar(fill = c("red","pink")))
mosaic(xtabs(Number ~ Region + Gender+Diagnosed,data = Canchild), direction =c("v","h","h"),gp = gpar(fill = c("red","pink")))
mosaic(xtabs(Number ~ Region + Gender+Diagnosed,data = Canchild), direction =c("v","v","h"),gp = gpar(fill = c("red","pink")))
ggplot(DrPaAge, aes(DrAge,PasAge))+geom_point(size =1, colour = "black") + xlab("Driver Age")+ylab("Passenger Age")
ggplot(Quote,aes("",Quote)) + geom_boxplot(fill = "red")+ facet_wrap( ~Age, scales= "fixed")
ggplot(Quote,aes("",Quote)) + geom_boxplot(fill = "purple")+ facet_wrap( ~Age, scales= "fixed")
ggplot(Quote,aes("",Quote)) + geom_boxplot(fill = "violet")+ facet_wrap( ~Age, scales= "fixed")
ggplot(Quote,aes("",Quote)) + geom_boxplot(fill = "indigo")+ facet_wrap( ~Age, scales= "fixed")
ggplot(Quote,aes("",Quote)) + geom_boxplot(fill = "navy")+ facet_wrap( ~Age, scales= "fixed")
View(Apprentice2)
View(BurglaryRate)
View(BurglaryRate)
ggplot(BurglaryRate,aes(Longitude,Latitude,size = Rate)) + geom_point()+  xlab("Longitude") +  ylab("Latitude") + ggtitle("Crime Rate by Garda Station per 100,000 Population")
ggplot(data = BurglaryRate, aes(longitude, latitude)
ggplot(BurglaryRate, aes(Longitude, Latitude))
ggplot(BurglaryRate, aes(Longitude, Latitude))
ggplot(BurglaryRate, aes(Longitude, Latitude)) + geom_point()+ xlab("Longitude") + ylab("Latitude") + ggtitle("Crime Rate in Ireland")
ggplot(BurglaryRate, aes(Longitude, Latitude)) + geom_point()+ xlab("Longitude") + ylab("Latitude") + ggtitle("_Crime Rate in Ireland_")
ggplot(BurglaryRate, aes(Longitude, Latitude)) + geom_point()+ xlab("Longitude") + ylab("Latitude") + ggtitle("Crime Rate in Ireland")
ggplot(BurglaryRate, aes(Longitude, Latitude)) + geom_point()+ xlab("Longitude") + ylab("Latitude") + ggtitle("Crime Rate in Ireland") + fill"red"
ggplot(BurglaryRate, aes(Longitude, Latitude)) + geom_point()+ xlab("Longitude") + ylab("Latitude") + ggtitle("Crime Rate in Ireland")
ggplot(BurglaryRate, aes(Longitude, Latitude)) + geom_point(col = red)+ xlab("Longitude") + ylab("Latitude") + ggtitle("Crime Rate in Ireland")
ggplot(BurglaryRate, aes(Longitude, Latitude)) + geom_point(col=red)+ xlab("Longitude") + ylab("Latitude") + ggtitle("Crime Rate in Ireland")
ggplot(BurglaryRate, aes(Longitude, Latitude)) + geom_point(color=red)+ xlab("Longitude") + ylab("Latitude") + ggtitle("Crime Rate in Ireland")
ggplot(BurglaryRate, aes(Longitude, Latitude)) + geom_point(col = "red")+ xlab("Longitude") + ylab("Latitude") + ggtitle("Crime Rate in Ireland")
ggplot(BurglaryRate, aes(Longitude, Latitude)) + geom_point(col = "navy")+ xlab("Longitude") + ylab("Latitude") + ggtitle("Crime Rate in Ireland")
ggplot(BurglaryRate, aes(Longitude, Latitude)) + geom_point(col = "purple")+ xlab("Longitude") + ylab("Latitude") + ggtitle("Crime Rate in Ireland")
library(readxl)
Premcs <- read_excel("N:/Year_4/Premcs.xlsx")
View(Premcs)
ggplot(Premcs, aes(Category, Number)) + geom_bar()
ggplot(Premcs, aes(Year, Age)) + geom_bar()
ggplot(data = Premcs, aes(Year, AvPermiumTP)) + geom_bar(stat = "identity")
ggplot(data = Premcs, aes(Year, Quote)) + geom_bar(stat = "identity")
View(Premcs)
ggplot(data = Premcs, aes(AvPremiumTP, Quote)) + geom_bar(stat = "identity")
ggplot(data = Premcs, aes(AvPremiumTP, Year)) + geom_bar(stat = "identity")
ggplot(data = Premcs, aes(Year, AvPremiumTP)) + geom_bar(stat = "identity")
ggplot(data = Premcs, aes(Year, AvPremiumTP)) + geom_bar(stat = "identity") + faucetWrap(~ Age)
ggplot(data = Premcs, aes(Year, AvPremiumTP)) + geom_bar(stat = "identity") + faucet_Wrap(~ Age)
ggplot(data = Premcs, aes(Year, AvPremiumTP)) + geom_bar(stat = "identity") + faucet_wrap(~ Age)
ggplot(data = Premcs, aes(Year, AvPremiumTP)) + geom_bar(stat = "identity") + facet_wrap(~ Age)
load("N:/Year_4/RFiles/Dataviz2018 .Rproj")
library(readxl)
ExerciseData_2018_ <- read_excel("N:/Year_4/Data Viz/ExerciseData(2018).xlsx")
View(ExerciseData_2018_)
View(Premcs)
getwd()
setwd("N:/Year_4/Data Viz/CA1")
getwd()
cover <- read.csv(file="question2.csv", header= TRUE, sep = ",")
View(cover)
install.packages("vcd")
library("vcd", lib.loc="\\\\sideshowbob1/studenthome/N00153748/My Documents/R/win-library/3.5")
mosaic(xtabs(Price ~ Company + Cover,  data=cover),direction = c("v", "h"),gp = gpar(fill = c("red")
mosaic(xtabs(Price ~ Company + Cover,  data=cover),direction = c("v", "h"),gp = gpar(fill = c("red")
mosaic(xtabs(Price ~ Company + Cover,  data=cover),direction = c("v", "h"),gp = gpar(fill = c("red")))
mosaic(xtabs(Price ~ Company + Cover,  data=cover),direction = c("v", "h"),gp = gpar(fill = c("blue", "pink")))
mosaic(xtabs(Price ~ Company + Cover,  data=cover),direction = c("v", "h"),gp = gpar(fill = c("navy", "pink")))
getwd()
setwd("N:/Year_4/Data Viz/CA1")
cover <- read.csv(file="question2.csv", header= TRUE, sep = ",")
mosaic(xtabs(Price ~ Company + Cover,  data=cover),direction = c("v", "h"),gp = gpar(fill = c("navy", "pink")))
library("ggplot2", lib.loc="\\\\sideshowbob1/studenthome/N00153748/My Documents/R/win-library/3.5")
library("vcd", lib.loc="\\\\sideshowbob1/studenthome/N00153748/My Documents/R/win-library/3.5")
getwd()
setwd("N:/Year_4/Data Viz/CA1")
cover <- read.csv(file="question2.csv", header= TRUE, sep = ",")
mosaic(xtabs(Price ~ Company + Cover,  data=cover),direction = c("v", "h"),gp = gpar(fill = c("navy", "pink")))
